apply from: '../includeCommon.gradle'
apply from: '../include.gradle'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

evaluationDependsOn(':jtransc-rt')

dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib:${project.ext.kotlin_version}"
	compile "org.jetbrains.kotlin:kotlin-runtime:${project.ext.kotlin_version}"
	compile "org.jetbrains.kotlin:kotlin-reflect:${project.ext.kotlin_version}"

	compile project(':jtransc-core')
	compile project(':jtransc-utils')
	compile project(':jtransc-gen-haxe')
	compile project(':jtransc-gen-js')
	compile project(':jtransc-gen-cpp')
	compile project(':jtransc-gen-d')
	compile project(':jtransc-gen-cs')
	compile project(':jtransc-gen-php')
	compile project(':jtransc-gen-as3')
	compile project(':jtransc-gen-dart')
	compile project(':jtransc-rt-core')

	provided project(':jtransc-rt') // Needs to be provided so it doesn't include at runtime
	compileOnly project(':jtransc-rt') // Needs to be provided so it doesn't include at runtime

	//providedCompile project(':jtransc-rt') // Needs to be provided so it doesn't include at runtime
	testCompile project(":jtransc-rt-core-kotlin")
	testCompile project(":jtransc-rt-extended-charsets")
	testCompile project(':jtransc-gen-common-tests')
}

idea {
	module {
		//COMPILE
		scopes.PROVIDED.plus += [configurations.provided]
	}
}

task rtReport(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'com.jtransc.JTranscRtReport'
	args ''
	doFirst { println("travis_fold:start:jtransc-rt-report") }
	doLast { println("travis_fold:end:jtransc-rt-report") }
}

task report(dependsOn: rtReport) {
	doLast {
		println("report")
	}
}

project(':jtransc-main').compileKotlin.dependsOn(project(':jtransc-rt').build)
